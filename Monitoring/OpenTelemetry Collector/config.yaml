exporters:
  prometheus:
    endpoint: 0.0.0.0:8889
  loki:
    endpoint: "http://nas:3100/loki/api/v1/push"

receivers:
  # otelcontribcol metrics + host metrics
  prometheus/agent:
    config:
      scrape_configs:
        - job_name: otel-collector
          scrape_interval: 10s
          static_configs:
            - targets: [0.0.0.0:8888]
          metric_relabel_configs:
            - action: labeldrop
              regex: "service_instance_id|service_name"

  hostmetrics/system:
    collection_interval: 10s
    scrapers:
      cpu:
        metrics:
          system.cpu.time:
            enabled: true
          system.cpu.logical.count:
            enabled: true
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
      load:
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      network:
      paging:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317

processors:
  batch/agent:
  filter/ottl:
    error_mode: ignore
    logs:
      log_record:
        - 'instrumentation_scope.name != "Microsoft.AspNetCore.Hosting.Diagnostics"'
        - 'instrumentation_scope.name != "Microsoft.AspNetCore.Hosting.Diagnostics"'
        - 'instrumentation_scope.name != "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker"'
        - 'instrumentation_scope.name != "Microsoft.Hosting.Lifetime"'
  resource/agent:
    attributes:
      - action: upsert
        key: service.namespace
        value: agent
  attributes/agent:
    actions:
      - key: service.namespace
        action: upsert
        value: agent
      - key: service.name
        action: upsert
        value: otel-collector
  resourcedetection/system:
    detectors: ["system"]
    system:
      hostname_sources: ["os"]
  transform:
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["host.name"], resource.attributes["host.name"])
          - set(attributes["process.command"], resource.attributes["process.command"])
          - set(attributes["process.command_line"], resource.attributes["process.command_line"])
          - set(attributes["process.executable.name"], resource.attributes["process.executable.name"])
          - set(attributes["process.executable.path"], resource.attributes["process.executable.path"])
          - set(attributes["process.owner"], resource.attributes["process.owner"])
          - set(attributes["process.parent_pid"], resource.attributes["process.parent_pid"])
          - set(attributes["process.pid"], resource.attributes["process.pid"])

extensions:
  health_check:
    endpoint: "0.0.0.0:13133"

service:
  extensions: [health_check]
  telemetry:
    logs:
      level: info
    metrics:
      level: detailed

  pipelines:
    metrics/agent:
      receivers: [prometheus/agent, hostmetrics/system]
      processors: [attributes/agent, resourcedetection/system, transform, batch/agent]
      exporters: [prometheus]
    logs:
      receivers: [ otlp ]
      processors: [ batch/agent ]
      exporters: [ loki ]
